"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pythonLanguage = void 0;
exports.pythonLanguage = {
    toParameterTypeName: function () {
        throw new Error('Unsupported operation');
    },
    toParameterTypeRegExps: function () {
        throw new Error('Unsupported operation');
    },
    toStepDefinitionExpression: function (node) {
        var s = node.text.slice(1, -1);
        // remove python named capture groups.
        // TODO: This should be temporary. Python supports
        // a wider array of regex features than javascript
        // a singular way of communicating regex consistent
        // across languages is necessary
        var specialChars = /[^$<>]/;
        if (specialChars.test(s)) {
            var replaced = s.split('?P').join('');
            return new RegExp(replaced);
        }
        else {
            return s;
        }
    },
    defineParameterTypeQueries: [],
    defineStepDefinitionQueries: [
        "\n(decorated_definition\n    (decorator\n        (call\n            function: (identifier) @method\n            arguments: (argument_list (string) @expression)\n        )\n    )\n    (#match? @method \"(given|when|then)\")\n) @root\n",
    ],
    snippetParameters: {
        int: { type: 'int' },
        float: { type: 'float' },
        word: { type: 'str' },
        string: { type: 'str' },
        double: { type: 'double' },
        bigdecimal: { type: 'decimal' },
        byte: { type: 'byte' },
        short: { type: 'short' },
        long: { type: 'long' },
        biginteger: { type: 'int' },
        '': { type: 'Object', name: 'arg' },
    },
    defaultSnippetTemplate: "\n  @{{ #lowercase }}{{ keyword }}{{ /lowercase }}('{{ expression }}')\n  def step_{{ #lowercase }}{{ keyword }}{{ /lowercase }}({{ #parameters }}{{ #seenParameter }}, {{ /seenParameter }}{{ name }}{{ /parameters }}) :\n      # This was autogenerated using cucumber syntax.\n      # Please convert to use regular expressions, as Behave does not currently support Cucumber Expressions",
};
//# sourceMappingURL=pythonLanguage.js.map